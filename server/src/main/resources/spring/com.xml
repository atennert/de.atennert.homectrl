<?xml version="1.0" encoding="UTF-8"?>
<!--*******************************************************************************
 * Copyright 2015 Andreas Tennert
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************-->
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd"
  default-init-method="init"
  default-destroy-method="dispose">
  
  <context:annotation-config/>
  

  <bean id="deviceRegistration" class="org.atennert.homectrl.registration.DeviceRegistration">
    <property name="nodeDescriptions">
      <bean factory-bean="deviceDescriptionFactory" factory-method="getNodeDescriptions"/>
    </property>
    <property name="dataDescriptions">
      <bean factory-bean="deviceDescriptionFactory" factory-method="getDataDescriptions"/>
    </property>
    <property name="interpreterProtocolRestrictions">
      <map>
        <entry key="http">
          <set>
            <value>params</value>
            <value>atmel</value>
          </set>
        </entry>
        <entry key="enocean">
          <set>
            <value>enocean</value>
          </set>
        </entry>
      </map>
    </property>
  </bean>
  
  <bean id="communicationHandler" class="org.atennert.homectrl.communication.CommunicationHandler">
    <property name="hostLibrary" ref="deviceRegistration"/>    
  </bean>
  
  <bean id="interpreterManager" class="org.atennert.com.interpretation.InterpreterManager">
    <property name="dataAcceptance" ref="communicationHandler"/>
    <property name="interpreters">
      <map>
        <entry key="params">
          <bean class="org.atennert.homectrl.interpretation.ParameterInterpreter"/>
        </entry>
        <entry key="atmel">
          <bean class="org.atennert.homectrl.interpretation.AtmelInterpreter"/>
        </entry>
        <entry key="enocean">
          <bean class="org.atennert.homectrl.interpretation.EnOceanInterpreter"/>
        </entry>
      </map>
    </property>
  </bean>
  
  <bean id="senderManager" class="org.atennert.com.communication.SenderManager">
    <property name="sender">
      <map>
        <entry key="http">
          <bean class="org.atennert.homectrl.communication.HttpSender"/>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="scheduler" class="rx.schedulers.Schedulers" factory-method="from">
    <constructor-arg index="0">
        <bean class="java.util.concurrent.Executors" factory-method="newFixedThreadPool" destroy-method="shutdown">
            <constructor-arg index="0" value="10" /><!-- Thread count -->
        </bean>
    </constructor-arg>
  </bean>

  <bean id="communicator" class="org.atennert.com.communication.Communicator">
    <property name="interpreterManager" ref="interpreterManager"/>
    <property name="senderManager" ref="senderManager"/>
    <property name="nodeRegistration" ref="deviceRegistration"/>
    <property name="scheduler" ref="scheduler"/>
    <property name="receivers">
      <set>
        <bean class="org.atennert.homectrl.communication.HttpReceiver">
          <property name="interpreterManager" ref="interpreterManager"/>
          <property name="address" value="${address.homectrl.server.http}"/>
        </bean>
        <bean class="org.atennert.homectrl.communication.EnOceanReceiver">
          <property name="interpreterManager" ref="interpreterManager"/>
          <property name="address" value="${address.homectrl.server.enocean}"/>
        </bean>
      </set>
    </property>
  </bean>
</beans>